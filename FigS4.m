clearvars; close all; clc;
varphi_2 = 0.0 * pi;
varphi_3 = 0.5 * pi;

figure;
[Omegat_plot, delta_omega_plot, spectrum1] = get_spectrum([1; 0], varphi_2, varphi_3);
[~, ~, spectrum2] = get_spectrum([0; 1], varphi_2, varphi_3);
spectrum = spectrum1 + spectrum2;
spectrum = spectrum / max(max(spectrum));

surf(Omegat_plot, delta_omega_plot, transpose(spectrum), 'EdgeColor', 'none');
colormap hot; view([0, 0, 1]); grid off;
xlim([-0.5, 0.5]); xticks([-0.5, 0, 0.5]); clim([0, 0.5]);
ylim([-1, 1] * 0.03); yticks([-1, 0, 1] * 0.03);
xticklabels([]); yticklabels([]); pbaspect([3, 4, 1]);
set(gca, 'fontname', 'Arial', 'fontsize', 22, 'fontweight', 'normal', ...
    'labelfontsizemultiplier', 1, 'linewidth', 2, 'Layer', 'Top', 'Box', 'on');
set(gcf, 'unit', 'normalized', 'Position', [0.2 0.05 0.4 0.8]);


function [Omegat_plot, delta_omega_plot, spectrum] = get_spectrum(psi_in, varphi_2, varphi_3)
M = 3;
kappa_TR = 0.1; gamma0 = 0.038;
delta_omega_range = 0.03;

num_pts_within_roundtrip = 400; num_roundtrips = 201;
spectrum = zeros(num_pts_within_roundtrip * num_roundtrips, 1);
Omegat_list = linspace(0, num_roundtrips, numel(spectrum) + 1) * 2*pi; Omegat_list(end) = [];
delta_omega_list = linspace(-1, 1, numel(spectrum) + 1) * delta_omega_range * 2*pi; delta_omega_list(end) = [];
[Omegat_plot, delta_omega_plot] = meshgrid(linspace(-0.5, 0.5, num_pts_within_roundtrip), ...
    linspace(-1, 1, num_roundtrips - 1) * delta_omega_range);

T = @(x) transmittance(x, M, kappa_TR, varphi_2, varphi_3);

for loop_index = 1 : numel(spectrum)
    Omegat = Omegat_list(loop_index);
    delta_omega = delta_omega_list(loop_index);
    P = exp(1i * delta_omega) * exp(-gamma0);
    psi_ss = inv(eye(2) - T(Omegat) * P) * psi_in;
    spectrum(loop_index) = psi_ss' * psi_ss;
end
spectrum(1 : num_pts_within_roundtrip/2) = [];
spectrum(end - num_pts_within_roundtrip/2 + 1 : end) = [];
spectrum = reshape(spectrum, num_pts_within_roundtrip, num_roundtrips - 1);
end

function y = transmittance(Omegat, M, kappa_TR, varphi_2, varphi_3)
%%% Perturbation parameters setup
sigma = 0.03;
% These numbers are generated by randn, i.e., N(0, 1)
epsilon_111 = sigma * 1.11246764180111;
epsilon_211 = sigma * -0.0704404672686430;
epsilon_112 = sigma * 0.747582355638386;
epsilon_212 = sigma * 0.688726795275952;
epsilon_121 = sigma * -0.750021437567540;
epsilon_221 = sigma * 0.241347797960698;
epsilon_122 = sigma * -0.345529339761287;
epsilon_222 = sigma * -0.192317405170625;
epsilon_131 = sigma * 2.09505397589882;
epsilon_231 = sigma * -0.666786072385549;
epsilon_132 = sigma * 0.367781714179656;
epsilon_232 = sigma * -0.943779538210713;
epsilon_31 = sigma * -0.164341225789380;
epsilon_32 = sigma * -0.0966146684268718;
epsilon_33 = sigma * 1.16981959846764;
epsilon_41 = sigma * -0.795249723691244;
epsilon_42 = sigma * 1.63262681878727;
epsilon_43 = sigma * -0.700055248394288;
% Matrices generated by M = randn(2) + 1i * randn(2); M = M / max(svd(M));
M31 = [-0.4464 - 0.1589i   0.5654 - 0.5171i;
       -0.4335 - 0.0764i  -0.2804 - 0.2358i];
M32 = [0.0992 - 0.3867i   0.0859 + 0.7067i
      -0.4383 - 0.6686i   0.0217 + 0.0346i];
M33 = [-0.3778 + 0.1222i  -0.7453 + 0.4433i
       -0.2225 - 0.3883i  -0.0236 + 0.3796i];
M41 = [0.4349 - 0.3580i   0.0046 + 0.0074i
       0.4686 + 0.2233i  -0.4490 + 0.6308i];
M42 = [-0.6211 - 0.0214i  -0.0889 + 0.0475i
       -0.6250 + 0.1270i   0.0044 - 0.6173i];
M43 = [-0.1633 + 0.1936i  -0.7615 - 0.0855i
       -0.3039 - 0.0551i  -0.4253 + 0.4212i];


U1 = [1, -1; 1, 1]/sqrt(2); 
U2 = [-1i, -1i; 1, -1]/sqrt(2);
U3 = eye(2);

y1 = [exp(+1i * kappa_TR * sin(Omegat)) * (1 + epsilon_111) * exp(1i * epsilon_211), 0;
      0, exp(-1i * kappa_TR * sin(Omegat)) * (1 + epsilon_112) * exp(1i * epsilon_212)];
y2 = [exp(+1i * kappa_TR * sin(M*Omegat+varphi_2)) * (1 + epsilon_121) * exp(1i * epsilon_221), 0;
      0, exp(-1i * kappa_TR * sin(M*Omegat+varphi_2)) * (1 + epsilon_122) * exp(1i * epsilon_222)];
y3 = [exp(+1i * kappa_TR * (2 - cos(Omegat) - cos(M*Omegat+varphi_2) - cos(M^2*Omegat+varphi_3))) * (1 + epsilon_131) * exp(1i * epsilon_231), 0;
      0, exp(-1i * kappa_TR * (2 - cos(Omegat) - cos(M*Omegat+varphi_2) - cos(M^2*Omegat+varphi_3))) * (1 + epsilon_132) * exp(1i * epsilon_232)];

y = ((U1 + epsilon_31 * M31) * y1 * (U1' + epsilon_41 * M41) + ...
     (U2 + epsilon_32 * M32) * y2 * (U2' + epsilon_42 * M42) + ...
     (U3 + epsilon_33 * M33) * y3 * (U3' + epsilon_43 * M43))/3;
end